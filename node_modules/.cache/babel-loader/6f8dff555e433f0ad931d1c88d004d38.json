{"ast":null,"code":"var _jsxFileName = \"/home/excellarate/Desktop/Projects/Advanced-Redux/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { uiActions } from \"./store/ui\";\nimport Notification from \"./components/UI/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const cartisVisible = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"sending\",\n      message: \"sending cart data\"\n    }));\n    fetch(\"https://advanced-redux-29300-default-rtdb.firebaseio.com/cart.json\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to retrieve data\");\n      }\n\n      const data = response.json();\n      console.log(data);\n    });\n    fetch(\"https://advanced-redux-29300-default-rtdb.firebaseio.com/cart.json\", {\n      method: \"PUT\",\n      body: JSON.stringify(cart)\n    }).then(repsonse => {\n      if (!repsonse.ok) {\n        throw new Error(\"Sending Cart Data Failed\");\n      }\n\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"success\",\n        message: \"cart data send succesfully\"\n      }));\n    }).catch(error => {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"error\",\n        message: \"cart data not sent!\"\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [cartisVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RrDdYzuZZHqyU6CgkHhz3uIbQJw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","useSelector","useDispatch","Cart","Layout","Products","uiActions","Notification","isInitial","App","cartisVisible","state","ui","cartIsVisible","cart","notification","dispatch","showNotification","status","title","message","fetch","then","response","ok","Error","data","json","console","log","method","body","JSON","stringify","repsonse","catch","error"],"sources":["/home/excellarate/Desktop/Projects/Advanced-Redux/src/App.js"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { uiActions } from \"./store/ui\";\nimport Notification from \"./components/UI/Notification\";\n\nlet isInitial=true; \n\nfunction App() {\n  const cartisVisible = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification=useSelector(state=>state.ui.notification)\n  const dispatch = useDispatch();\n  useEffect(() => {\n\n    if(isInitial){\n      isInitial=false;\n      return;\n    }\n      dispatch(\n        uiActions.showNotification({\n          status: \"pending\",\n          title: \"sending\",\n          message: \"sending cart data\",\n        })\n      );\n\n      fetch(\"https://advanced-redux-29300-default-rtdb.firebaseio.com/cart.json\")\n      .then((response)=>{\n        if(!response.ok){\n          throw new Error(\"Failed to retrieve data\")\n        }\n        const data=response.json()\n        console.log(data)\n      })\n      \n      fetch(\n        \"https://advanced-redux-29300-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      )\n        .then((repsonse) => {\n          if (!repsonse.ok) {\n            throw new Error(\"Sending Cart Data Failed\");\n          }\n          dispatch(\n            uiActions.showNotification({\n              status: \"success\",\n              title: \"success\",\n              message: \"cart data send succesfully\",\n            })\n          );\n        })\n        .catch((error) => {\n          dispatch(\n            uiActions.showNotification({\n              status: \"error\",\n              title: \"error\",\n              message: \"cart data not sent!\",\n            })\n          );\n        });\n    \n  }, [cart,dispatch]);\n\n  return (\n    <Fragment>\n     {notification && <Notification \n       status={notification.status}\n       title={notification.title}\n       message={notification.message}\n      />}\n       <Layout>\n      {cartisVisible && <Cart />}\n      <Products />\n    </Layout>\n    </Fragment>\n   \n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,IAAIC,SAAS,GAAC,IAAd;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,aAAa,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASC,aAArB,CAAjC;EACA,MAAMC,IAAI,GAAGb,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAxB;EACA,MAAMC,YAAY,GAACd,WAAW,CAACU,KAAK,IAAEA,KAAK,CAACC,EAAN,CAASG,YAAjB,CAA9B;EACA,MAAMC,QAAQ,GAAGd,WAAW,EAA5B;EACAF,SAAS,CAAC,MAAM;IAEd,IAAGQ,SAAH,EAAa;MACXA,SAAS,GAAC,KAAV;MACA;IACD;;IACCQ,QAAQ,CACNV,SAAS,CAACW,gBAAV,CAA2B;MACzBC,MAAM,EAAE,SADiB;MAEzBC,KAAK,EAAE,SAFkB;MAGzBC,OAAO,EAAE;IAHgB,CAA3B,CADM,CAAR;IAQAC,KAAK,CAAC,oEAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAY;MAChB,IAAG,CAACA,QAAQ,CAACC,EAAb,EAAgB;QACd,MAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;MACD;;MACD,MAAMC,IAAI,GAACH,QAAQ,CAACI,IAAT,EAAX;MACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;IACD,CAPD;IASAL,KAAK,CACH,oEADG,EAEH;MACES,MAAM,EAAE,KADV;MAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,IAAf;IAFR,CAFG,CAAL,CAOGQ,IAPH,CAOSY,QAAD,IAAc;MAClB,IAAI,CAACA,QAAQ,CAACV,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;MACD;;MACDT,QAAQ,CACNV,SAAS,CAACW,gBAAV,CAA2B;QACzBC,MAAM,EAAE,SADiB;QAEzBC,KAAK,EAAE,SAFkB;QAGzBC,OAAO,EAAE;MAHgB,CAA3B,CADM,CAAR;IAOD,CAlBH,EAmBGe,KAnBH,CAmBUC,KAAD,IAAW;MAChBpB,QAAQ,CACNV,SAAS,CAACW,gBAAV,CAA2B;QACzBC,MAAM,EAAE,OADiB;QAEzBC,KAAK,EAAE,OAFkB;QAGzBC,OAAO,EAAE;MAHgB,CAA3B,CADM,CAAR;IAOD,CA3BH;EA6BH,CApDQ,EAoDN,CAACN,IAAD,EAAME,QAAN,CApDM,CAAT;EAsDA,oBACE,QAAC,QAAD;IAAA,WACED,YAAY,iBAAI,QAAC,YAAD;MACf,MAAM,EAAEA,YAAY,CAACG,MADN;MAEf,KAAK,EAAEH,YAAY,CAACI,KAFL;MAGf,OAAO,EAAEJ,YAAY,CAACK;IAHP;MAAA;MAAA;MAAA;IAAA,QADlB,eAMG,QAAC,MAAD;MAAA,WACAV,aAAa,iBAAI,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QADjB,eAED,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QAFC;IAAA;MAAA;MAAA;MAAA;IAAA,QANH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GAzEQD,G;UACeR,W,EACTA,W,EACMA,W,EACFC,W;;;KAJVO,G;AA2ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}