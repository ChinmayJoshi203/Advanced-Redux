{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    quantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const existingItem = state.items.find(item => item.id === action.payload);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id === !action.payload);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice = existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","quantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","totalPrice","title","removeItemFromCart","filter","cartActions","actions"],"sources":["/home/excellarate/Desktop/Projects/Advanced-Redux/src/store/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice=createSlice({\n    name:'cart',\n    initialState:{\n        items:[],\n        quantity:0,\n    },\n    reducers:{\n        addItemToCart(state, action){\n            const newItem=action.payload;\n            const existingItem=state.items.find(item=>item.id===newItem.id)\n            if(!existingItem){\n                state.items.push({itemId:newItem.id, price: newItem.price,quantity: 1, totalPrice:newItem.price, name: newItem.title})\n            }else{\n                existingItem.quantity=existingItem.quantity+1\n                existingItem.totalPrice=existingItem.totalPrice+newItem.price\n            }\n        },\n        removeItemFromCart(state,action){\n            const existingItem=state.items.find(item=>item.id===action.payload)\n            if(existingItem.quantity===1){\n                state.items=state.items.filter(item=>item.id===!action.payload)\n            }\n            else{\n                existingItem.quantity--;\n                existingItem.totalPrice=existingItem.totalPrice=existingItem.price\n            }\n        }\n    }\n})\n\nexport const cartActions=cartSlice.actions;\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAACD,WAAW,CAAC;EACxBE,IAAI,EAAC,MADmB;EAExBC,YAAY,EAAC;IACTC,KAAK,EAAC,EADG;IAETC,QAAQ,EAAC;EAFA,CAFW;EAMxBC,QAAQ,EAAC;IACLC,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAe;MACxB,MAAMC,OAAO,GAACD,MAAM,CAACE,OAArB;MACA,MAAMC,YAAY,GAACJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAUL,OAAO,CAACK,EAAzC,CAAnB;;MACA,IAAG,CAACH,YAAJ,EAAiB;QACbJ,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAiB;UAACC,MAAM,EAACP,OAAO,CAACK,EAAhB;UAAoBG,KAAK,EAAER,OAAO,CAACQ,KAAnC;UAAyCb,QAAQ,EAAE,CAAnD;UAAsDc,UAAU,EAACT,OAAO,CAACQ,KAAzE;UAAgFhB,IAAI,EAAEQ,OAAO,CAACU;QAA9F,CAAjB;MACH,CAFD,MAEK;QACDR,YAAY,CAACP,QAAb,GAAsBO,YAAY,CAACP,QAAb,GAAsB,CAA5C;QACAO,YAAY,CAACO,UAAb,GAAwBP,YAAY,CAACO,UAAb,GAAwBT,OAAO,CAACQ,KAAxD;MACH;IACJ,CAVI;;IAWLG,kBAAkB,CAACb,KAAD,EAAOC,MAAP,EAAc;MAC5B,MAAMG,YAAY,GAACJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAUN,MAAM,CAACE,OAAxC,CAAnB;;MACA,IAAGC,YAAY,CAACP,QAAb,KAAwB,CAA3B,EAA6B;QACzBG,KAAK,CAACJ,KAAN,GAAYI,KAAK,CAACJ,KAAN,CAAYkB,MAAZ,CAAmBR,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAU,CAACN,MAAM,CAACE,OAA3C,CAAZ;MACH,CAFD,MAGI;QACAC,YAAY,CAACP,QAAb;QACAO,YAAY,CAACO,UAAb,GAAwBP,YAAY,CAACO,UAAb,GAAwBP,YAAY,CAACM,KAA7D;MACH;IACJ;;EApBI;AANe,CAAD,CAA3B;AA8BA,OAAO,MAAMK,WAAW,GAACtB,SAAS,CAACuB,OAA5B;AACP,eAAevB,SAAf"},"metadata":{},"sourceType":"module"}